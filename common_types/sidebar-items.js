initSidebarItems({"constant":[["UNION","The implementation of trait Properties for our PermissionsRoles does not care which Moment is passed to the PoolRole::TrancheInvestor(TrancheId, Moment) variant. This UNION shall reflect that and explain to the reader why it is passed here."]],"enum":[["Adjustment",""],["CurrencyId",""],["PermissionScope",""],["PermissionedCurrencyRole",""],["PoolRole","PoolRole can hold any type of role specific functions a user can do on a given pool."],["Role","The Role enum is used by the permissions pallet, to specify which role an account has within a specific scope."]],"macro":[["impl_tranche_token",""]],"mod":[["ids","A module that contains all ids where we should be REALLY careful when changing them."]],"struct":[["CurrencyAdminRoles","The current admin roles we support"],["PermissionRoles","The structure that we store in the pallet-permissions storage This here implements trait Properties."],["PermissionedCurrencyHolderInfo",""],["PermissionedCurrencyHolders",""],["PoolAdminRoles","The current admin roles we support"],["PoolLocator","A representation of a pool identifier that can be converted to an account address"],["TimeProvider","A struct we need as the pallets implementing trait Time do not implement TypeInfo. This wraps this and implements everything manually."],["TrancheInvestorInfo",""],["TrancheInvestors",""]],"type":[["ForeignAssetId",""],["Moment",""],["PoolId","PoolId type we use."],["TrancheId","A representation of a tranche identifier"]]});